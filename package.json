{
	"name": "bazel-import",
	"displayName": "bazel-import",
	"description": "Automatically add Bazel deps when you import code",
	"version": "0.1.3",
	"engines": {
		"vscode": "^1.66.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onLanguage:typescript"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "bazel-import.openBazel",
				"title": "Nearest Bazel file",
				"category": "Open"
			},
			{
				"command": "bazel-import.fixDeps",
				"title": "Fix deps",
				"category": "Bazel Import"
			}
		],
		"configuration": [
			{
				"title": "Bazel Import",
				"properties": {
					"bazel-import.buildFile": {
						"type": "string",
						"default": "BUILD.bazel",
						"description": "The file name convention where your build targets are defined."
					},
					"bazel-import.notifyChange": {
						"type": "boolean",
						"default": true,
						"description": "Notify the user that a BUILD.bazel file has been updated."
					},
					"bazel-import.maxPackageSize": {
						"type": "integer",
						"default": 100,
						"description": "The maximum package size for removing dependencies. The larger this number, the slower the extension"
					},
					"bazel-import.maxCacheSize": {
						"type": "integer",
						"default": 10,
						"description": "The maximum packages to cache. The larger this number the more memory the extension will use (and it may slow the extension with O(n) for every file opened)"
					},
					"bazel-import.enableDeletion": {
						"type": "boolean",
						"default": true,
						"description": "Remove bazel dependencies"
					},
					"bazel-import.enableAddition": {
						"type": "boolean",
						"default": true,
						"description": "Add bazel dependencies"
					},
					"bazel-import.excludeDependencies": {
						"type": [
							"array",
							"null"
						],
						"default": [
							"//cake/build",
							"@npm//@types/node:node"
						],
						"description": "Add hidden dependencies here to avoid checking them (buildozer won't remove them, so this primarily influences the UI)"
					},
					"bazel-import.bazelShutdownOnActivation": {
						"type": "boolean",
						"default": false,
						"description": "Stop the current bazel server on extension activation"
					},
					"bazel-import.fixDepsOnCurrent": {
						"type": "boolean",
						"default": false,
						"description": "Automatically run fixDeps on the current file"
					},
					"bazel-import.kindPattern": {
						"type": "string",
						"default": "(ts|js)_library",
						"description": "Specify the kind of targets that you want to include in dependency analysis."
					}, 
					"bazel-import.importPathReplacements": {
						"type": "object",
						"default": {
							"bazel-out/k8-fastbuild/bin/": ""
						},
						"description": "Replaces import paths that include the keys with the values"
					},
					"bazel-import.defaultRoot": {
						"type": "string",
						"default": "",
						"description": "Sets the default root directory from the home directory if a workspace is not found"
					}

				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./tsconfig.json",
		"compile:scripts": "tsc -p ./scripts/tsconfig.json",
		"compile:all": "npm run compile && npm run compile:scripts",
		"watch": "tsc -watch -p ./tsconfig.json",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "vscode-test",
		"clean": "rm -r ./out",
		"config": "node out/scripts/configupdate.js"
	},
	"devDependencies": {
		"@types/mocha": "^9.1.0",
		"@types/node": "14.x",
		"@types/vscode": "^1.66.0",
		"@typescript-eslint/eslint-plugin": "^5.16.0",
		"@typescript-eslint/parser": "^5.16.0",
		"@vscode/test-cli": "^0.0.11",
		"@vscode/test-electron": "^2.5.2",
		"eslint": "^8.11.0",
		"mocha": "^9.2.2"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/jacob-church/bazel-import.git"
	},
	"publisher": "jacob-church",
	"dependencies": {
		"typescript": "^5.8.3"
	}
}
